name: Build NetGuard Plugin (x86_64)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  OPENWRT_VERSION: 23.05.2  # 必须使用支持 x86_64 的版本
  TARGET: x86/64            # 明确指定架构

jobs:
  build-plugin:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex g++ gawk gcc-multilib \
            gettext git libncurses5-dev libssl-dev python3 python3-venv python3-dev \
            rsync unzip zlib1g-dev file wget libtool-bin automake autoconf

      - name: Clone OpenWrt source
        run: |
          git clone https://git.openwrt.org/openwrt/openwrt.git --branch v${{ env.OPENWRT_VERSION }} --depth 1
          cd openwrt

      - name: Add plugin
        run: |
          cd openwrt
          git clone https://github.com/xxtt8812/luci-app-netguard.git package/luci-app-netguard

      - name: Configure target
        run: |
          cd openwrt
          # 明确指定 x86_64 架构
          echo "CONFIG_TARGET_x86=y" >> .config
          echo "CONFIG_TARGET_x86_64=y" >> .config
          # 启用必要依赖
          echo "CONFIG_PACKAGE_luci-app-netguard=y" >> .config
          echo "CONFIG_PACKAGE_kmod-nfnetlink=y" >> .config
          echo "CONFIG_PACKAGE_libnfnetlink=y" >> .config
          echo "CONFIG_PACKAGE_libnetfilter-log=y" >> .config
          make defconfig

      - name: Build toolchain first
        run: |
          cd openwrt
          make tools/toolchain/compile -j$(nproc) V=s

      - name: Build plugin
        run: |
          cd openwrt
          make package/luci-app-netguard/compile -j$(nproc) V=s

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: netguard-x86_64
          path: openwrt/bin/packages/x86_64/base/luci-app-netguard*.ipk
