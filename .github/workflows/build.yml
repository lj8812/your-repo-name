name: Build WebFilter Plugin (x86_64)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  OPENWRT_VERSION: 23.05.2
  TARGET: x86/64

jobs:
  build-plugin:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex g++ gawk gcc-multilib \
            gettext git libncurses5-dev libssl-dev python3 python3-venv python3-dev \
            rsync unzip zlib1g-dev file wget libtool-bin automake autoconf libpam0g-dev \
            liblzma-dev libsnmp-dev tree

      - name: Clone OpenWrt source
        run: |
          git clone https://git.openwrt.org/openwrt/openwrt.git --branch v${{ env.OPENWRT_VERSION }} --depth 1
          cd openwrt
          echo "OpenWrt版本验证: $(grep 'VERSION_NUMBER:=' include/version.mk | cut -d' ' -f2)"
          ls -la ./

      - name: Update feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a -p luci
          ./scripts/feeds install luci-compat libpam liblzma libnetsnmp

      - name: Add WebFilter plugin
        run: |
          cd openwrt
          mkdir -p package/network/services
          rm -rf package/network/services/luci-app-webfilter
          
          echo "::group::克隆插件仓库"
          git clone --depth=1 https://github.com/lj8812/luci-app-webfilter.git \
            package/luci-app-webfilter
          echo "::endgroup::"
          
          echo "::group::验证插件结构"
          ls -l package/luci-app-webfilter/
          test -f package/luci-app-webfilter/Makefile || (echo "Makefile缺失!"; exit 1)
          echo "::endgroup::"
          
          sed -i 's/iptables /iptables-legacy /g' package/luci-app-webfilter/root/etc/init.d/webfilter

      - name: Configure target
        run: |
          cd openwrt
          # 基础平台配置
          cat > .config << 'EOF'
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_LUCI_LANG_zh-cn=y
          EOF
          make defconfig
          
          # 追加插件配置
          cat >> .config << 'EOF'
          CONFIG_SIGNED_PACKAGES=y
          CONFIG_PACKAGE_luci-app-webfilter=y
          CONFIG_PACKAGE_luci-i18n-webfilter-zh-cn=y
          CONFIG_PACKAGE_iptables-legacy=y
          CONFIG_PACKAGE_dnsmasq-full=y
          CONFIG_PACKAGE_ipset=y
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_kmod-nf-conntrack=y
          CONFIG_PACKAGE_kmod-ipt-core=y
          CONFIG_PACKAGE_kmod-ipt-ipset=y
          CONFIG_PACKAGE_usign=y
          CONFIG_PACKAGE_libubox=y
          CONFIG_PACKAGE_dnsmasq=n
          EOF
          
          echo "=== 最终有效配置 ==="
          ./scripts/diffconfig.sh
          grep 'CONFIG_PACKAGE_usign=y' .config || echo "::error::usign配置未启用!"

      - name: Build toolchain
        run: |
          cd openwrt
          echo "::group::构建工具链"
          make tools/compile -j$(nproc) V=s
          make toolchain/compile -j$(nproc) V=s
          make tools/install -j$(nproc) V=s
          make toolchain/install -j$(nproc) V=s
          echo "::endgroup::"
          
          echo "::group::验证构建工具"
          ls -l staging_dir/host/bin/usign*
          test -f staging_dir/host/bin/usign || (echo "usign未找到!"; exit 1)
          echo "::endgroup::"

      - name: 清理并编译
        run: |
          cd openwrt
          echo "::group::预处理清理"
          rm -rf tmp/
          make package/index-clean
          echo "::endgroup::"
          
          echo "::group::生成初始索引"
          make package/index V=s IPKG_REMOVE_UNSIGNED=1 || true
          echo "::endgroup::"
          
          echo "::group::执行插件清理"
          make package/luci-app-webfilter/clean V=s || true
          echo "::endgroup::"
          
          echo "::group::编译插件"
          {
            make package/luci-app-webfilter/compile -j1 V=s 2>&1 | tee build.log
          } || {
            echo "::error::编译失败!"
            grep -C15 'ERROR:' build.log
            exit 1
          }
          echo "::endgroup::"
          
          echo "::group::产物验证"
          if ls bin/packages/x86_64/base/luci-app-webfilter*.ipk >/dev/null 2>&1; then
            echo "编译成功! 生成文件:"
            ls -lh bin/packages/x86_64/base/luci-app-webfilter*.ipk
          else
            echo "::error::未找到编译产物!"
            grep -i 'error\|fail' build.log | sort | uniq
            exit 1
          fi
          echo "::endgroup::"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webfilter-x86_64
          path: |
            openwrt/bin/packages/x86_64/base/luci-app-webfilter*.ipk
            openwrt/build.log
